rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /contacts/{contactId} {
      // A user can read, update, or delete a contact if they are logged in
      // and their UID matches the userId on the existing document.
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;

      // A user can create a contact if they are logged in and the new
      // document's userId field is being set to their own UID.
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    match /transactions/{transactionId} {
      // A user can read, update, or delete a transaction if they are logged in
      // and their UID matches the userId on the existing document.
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;

      // A user can create a transaction if they are logged in and the new
      // document's userId field is being set to their own UID.
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    match /orders/{orderId} {
      // A user can read, update, or delete an order if they are logged in
      // and their UID matches the userId on the existing document.
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;

      // A user can create an order if they are logged in and the new
      // document's userId field is being set to their own UID.
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    match /totals/{userId} {
      // A user can read and write to their own totals document.
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}